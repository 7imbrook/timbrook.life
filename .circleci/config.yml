version: 2.1
jobs:
  authenticate:
    docker:
      - image: 7imbrook/ci-deploy-tools
    working_directory: /root/ 
    steps:
      - run:
          name: Authenticate Cluster
          command: |
            # Auth cluster
            doctl kubernetes cluster list -t $DO_TOKEN
            doctl kubernetes cluster kubeconfig show prod-sfo -t $DO_TOKEN > ~/.kube/config
            kubectl config set-context --current --namespace=production
            kubectl get all
            helm init --client-only
            helm repo add personal https://helm-charts.sfo2.digitaloceanspaces.com/
            helm repo update
      - persist_to_workspace:
          root: ~/
          paths:
            - .helm/*
            - .kube/*
  frontend:
    docker:
      - image: circleci/node
    working_directory: /home/circleci/project/frontend
    steps:
      - checkout:
          path: /home/circleci/project/ 
      - setup_remote_docker
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Build Assets
          command: |
            npm run build
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Build Nginx Image
          command: ../scripts/build_release.sh 7imbrook/life ./conf frontend
      - persist_to_workspace:
          root: ~/logs
          paths:
            - frontend_push.log
  deploy_personal_site:
    docker:
      - image: 7imbrook/ci-deploy-tools
    working_directory: /root/project
    steps:
      - checkout
      - attach_workspace:
          at: /root/
      - run:
          name: Upgrade Helm Release
          command: |
            export SHA=$(tail -n 1 ../frontend_push.log | cut -d':' -f 4 | cut -d' ' -f 1);
            cd frontend;
            ../scripts/deploy_helm_app.sh personal-site-frontend $SHA;
  podcast:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: /root/project/podcast
    steps:
      - checkout:
          path: /root/project/ 
      - setup_remote_docker
      - run:
          name: Build and Push
          command: ../scripts/build_release.sh 7imbrook/podcast . podcast
      - persist_to_workspace:
          root: ~/logs
          paths:
            - podcast_push.log
  deploy_podcast_app:
    docker:
      - image: 7imbrook/ci-deploy-tools
    working_directory: /root/project
    steps:
      - checkout
      - attach_workspace:
          at: /root/
      - run:
          name: Upgrade Helm Release
          command: |
            export SHA=$(tail -n 1 ../podcast_push.log | cut -d':' -f 4 | cut -d' ' -f 1);
            cd podcast;
            ../scripts/deploy_helm_app.sh podcast $SHA;
  auth_service:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: /root/project/auth_server
    steps:
      - checkout:
          path: /root/project/ 
      - setup_remote_docker
      - run:
          name: Build and Push
          command: ../scripts/build_release.sh 7imbrook/auth . auth
      - persist_to_workspace:
          root: ~/logs
          paths:
            - auth_push.log
  deploy_auth_service:
    docker:
      - image: 7imbrook/ci-deploy-tools
    working_directory: /root/project
    steps:
      - checkout
      - attach_workspace:
          at: /root/
      - run:
          name: Upgrade Helm Release
          command: |
            export SHA=$(tail -n 1 ../auth_push.log | cut -d':' -f 4 | cut -d' ' -f 1);
            cd auth_server;
            ../scripts/deploy_helm_app.sh auth-server $SHA;
  door_service:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: /root/project/door
    steps:
      - checkout:
          path: /root/project/ 
      - setup_remote_docker
      - run:
          name: Build and Push
          command: ../scripts/build_release.sh 7imbrook/door . door 
      - persist_to_workspace:
          root: ~/logs
          paths:
            - door_push.log
  deploy_door_service:
    docker:
      - image: 7imbrook/ci-deploy-tools
    working_directory: /root/project
    steps:
      - checkout
      - attach_workspace:
          at: /root/
      - run:
          name: Upgrade Helm Release
          command: |
            export SHA=$(tail -n 1 ../door_push.log | cut -d':' -f 4 | cut -d' ' -f 1);
            cd door;
            ../scripts/deploy_helm_app.sh door-server $SHA;
  postprocessor_service:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: /root/project/podcast_process
    steps:
      - checkout:
          path: /root/project/ 
      - setup_remote_docker
      - run:
          name: Build and Push
          command: ../scripts/build_release.sh 7imbrook/postprocessor . podcast_process 
      - persist_to_workspace:
          root: ~/logs
          paths:
            - podcast_process_push.log
  deploy_postprocessor_service:
    docker:
      - image: 7imbrook/ci-deploy-tools
    working_directory: /root/project
    steps:
      - checkout
      - attach_workspace:
          at: /root/
      - run:
          name: Upgrade Helm Release
          command: |
            export SHA=$(tail -n 1 ../podcast_process_push.log | cut -d':' -f 4 | cut -d' ' -f 1);
            cd podcast_process;
            ../scripts/deploy_helm_app.sh postprocessor $SHA;
workflows:
  version: 2
  deployment:
    jobs:
      - authenticate
      - frontend
      - podcast
      - auth_service
      - door_service
      - postprocessor_service
      - deploy_podcast_app:
          requires:
            - authenticate
            - podcast 
          filters:
            branches:
              only: master
      - deploy_personal_site:
          requires:
            - authenticate
            - frontend
          filters:
            branches:
              only: master
      - deploy_auth_service:
          requires:
            - authenticate
            - auth_service
          filters:
            branches:
              only: master
      - deploy_door_service:
          requires:
            - authenticate
            - door_service
          filters:
            branches:
              only: master
      - deploy_postprocessor_service:
          requires:
            - authenticate
            - postprocessor_service 
          filters:
            branches:
              only: master