version: 2
jobs:
  build:
    docker:
      - image: docker:17.05.0-ce-git

    working_directory: ~/personal-page

    # branches:
    #   ignore:
    #     - develop
    #     - /feature-.*/

    steps:
      - checkout
      - setup_remote_docker
      - run: |
         docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Build
          command: docker build -t local_build_only .
      - run:
          name: Tag and Push
          command: |
            docker tag local_build_only 7imbrook/life;
            docker push 7imbrook/life | tee ./push_log.log
      - run:
          command: tail -n 1 ./push_log.log
      

      # - run:
      #     environment:
      #       SSH_TARGET: "localhost"
      #       TEST_ENV: "linux"
      #     command: |
      #       set -xu
      #       mkdir -p ${TEST_REPORTS}
      #       run-tests.sh
      #       cp out/tests/*.xml ${TEST_REPORTS}

      # - save_cache:
      #     key: v1-my-project-{{ checksum "project.clj" }}
      #     paths:
      #       - ~/.m2

      # # Save artifacts
      # - store_artifacts:
      #     path: /tmp/artifacts
      #     destination: build

      # # Upload test results
      # - store_test_results:
      #     path: /tmp/test-reports
          
  # deploy-stage:
  #   docker:
  #     - image: ubuntu:14.04
  #   working_directory: /tmp/my-project  
  #   steps:
  #     - run:
  #         name: Deploy if tests pass and branch is Staging
  #         command: ansible-playbook site.yml -i staging          
          
  # deploy-prod:
  #   docker:
  #     - image: ubuntu:14.04
  #   working_directory: /tmp/my-project  
  #   steps:
  #     - run:
  #         name: Deploy if tests pass and branch is Master
  #         command: ansible-playbook site.yml -i production

# workflows:
#   version: 2
#   build-deploy:
#     jobs:
#       - build
#       - deploy-stage:
#           requires:
#             - build
#           filters:
#             branches:
#               only: staging
#       - deploy-prod:
#           requires:
#             - build
#           filters:
#             branches:
#               only: master